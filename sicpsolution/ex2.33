(define (accumulate op initial sequence)
  (if (null? sequence)
      initial
	  ((lambda (x y)
	     (op (car y)
		     (accumulate op x (cdr y))))
	   initial
	   sequence)))
(define (map p sequence)
  (accumulate (lambda (x y) (cons (p x) y)   nil sequence)))
(define (append seq1 seq2)
  (accumulate cons seq2 seq1))
(define (length sequence)
  (accumulate (lambda (x y)
                (+ 1 y)) //统计的是调用cdr 的次数。
				0
				sequence))
                