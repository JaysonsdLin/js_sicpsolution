(define (tree->list-l tree)
  (if (null? tree)
      '()
	  (append (tree->list-l (left-branch tree))
	          (cons (entry tree)
			        (tree->list-l (right-branch tree))))))
(define (tree->list-2 tree)
  (define (copy-to-list tree result-list)
    (if (null? tree)
	    result-list
		(copy-to-list (left-branch tree)
		              (cons (entry tree)
					        (copy-to-list (right-branch tree)
							              result-list)))))
  (copy-to-list tree '()))
   